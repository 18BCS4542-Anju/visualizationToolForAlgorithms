@use 'colors' as colors;

@mixin flexContainerJustifyCenterAlignItemCenter($width: 100%, $height: 100%) {
    display: flex;
    align-items: center;
    justify-content: center;
    width: $width;
    height: $height;
}

@mixin zoomIn($x: 0px, $y: 0px) {
    animation: animate 1s ease-in forwards;
    @keyframes animate {
        from {
            transform: scale(1.5) translateY(0, 0);
        }
        to {
            transform: scale(1) translate($x, $y);
        }
    }
}

.container {
    @include flexContainerJustifyCenterAlignItemCenter(100%, 100%);
    flex-direction: column;
}

.algorithmContainer {
    @include flexContainerJustifyCenterAlignItemCenter(100%, 100%);
    align-items: flex-end;
    flex-wrap: wrap;
}
.algorithmContainer > * {
    transition: all 1s ease-in-out;
}

.rectangle {
    height: 1.5rem;
    width: 1.5rem;
    background-color: colors.$primary-box-bg;
    border-radius: 0.8rem;
    margin: 0.5rem;
    padding: 2rem;
    transition: all 0.5s;
    box-shadow: 1px 1px 5px 1px colors.$text-dark;
    box-shadow: inset 1px 1px 5px 1px rgba(20, 20, 20, 0.2);
    font-weight: bold;
}
.controlsContainer {
    display: flex;
    justify-content: space-around;
    align-items: center;
    margin-top: 5rem;
}

.active {
    @include zoomIn(0, 2rem);
    background-color: colors.$secondary-box-bg;
    color: colors.$text-light;
    border-left: 5px solid colors.$text-dark;
}

.swap {
    background-color: colors.$tertiary-box-bg;
    color: colors.$text-light;
    border-right: 5px solid colors.$text-dark;
    animation: zoomIn 800ms forwards ease-in-out;
    @include zoomIn(0, 2rem);
}

.sorted {
    background-color: colors.$primary-box-bg;
    color: colors.$text-dark;
    border: none;
    animation: none;
}

@keyframes fadeOut {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
